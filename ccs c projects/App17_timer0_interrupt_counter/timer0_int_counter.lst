CCS PCM C Compiler, Version 5.084d, 1               07-Jun-19 19:40
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   Y:\ccs c projects\App17_timer0_interrupt_counter\timer0_int_counter.lst

               ROM used:   108 words (1%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           13 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03C
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
....................  
.................... #include <16f877.h> 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
....................  
.................... #fuses XT, NOWDT, NOPROTECT, NOBROWNOUT, NOLVP, NOPUT, NOWRT, NODEBUG, NOCPD 
....................  
.................... #use delay (clock = 4000000) 
....................  
.................... #use fast_io(a) 
.................... #use fast_io(b) 
....................  
.................... char sayi = 0; 
....................  
.................... #int_timer0 
.................... void timer0_interrupt() 
.................... { 
....................    set_timer0(254); 
002F:  MOVLW  FE
0030:  MOVWF  01
....................     
....................    sayi++; 
0031:  INCF   27,F
....................    output_b(sayi); 
0032:  MOVF   27,W
0033:  MOVWF  06
....................     
....................    if(sayi == 15) 
0034:  MOVF   27,W
0035:  SUBLW  0F
0036:  BTFSC  03.2
....................       sayi = 0; 
0037:  CLRF   27
....................     
0038:  BCF    0B.2
0039:  BCF    0A.3
003A:  BCF    0A.4
003B:  GOTO   01B
.................... } 
....................  
.................... void main() 
003C:  MOVF   03,W
003D:  ANDLW  1F
003E:  MOVWF  03
003F:  CLRF   27
0040:  BSF    03.5
0041:  BSF    1F.0
0042:  BSF    1F.1
0043:  BSF    1F.2
0044:  BCF    1F.3
0045:  BCF    03.7
.................... { 
....................    setup_psp(PSP_DISABLED); 
0046:  BCF    09.4
....................    setup_timer_1(T1_DISABLED); 
0047:  BCF    03.5
0048:  CLRF   10
....................    setup_timer_2(T2_DISABLED, 0, 1); 
0049:  MOVLW  00
004A:  MOVWF  78
004B:  MOVWF  12
004C:  MOVLW  00
004D:  BSF    03.5
004E:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
004F:  BSF    1F.0
0050:  BSF    1F.1
0051:  BSF    1F.2
0052:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
0053:  BCF    03.5
0054:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
0055:  MOVLW  F0
0056:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
0057:  ANDWF  1D,F
....................     
....................    set_tris_a(0x10); 
0058:  MOVLW  10
0059:  BSF    03.5
005A:  MOVWF  05
....................    set_tris_b(0x00); 
005B:  MOVLW  00
005C:  MOVWF  06
....................     
....................    output_b(0x00); 
005D:  BCF    03.5
005E:  CLRF   06
....................     
....................    setup_timer_0(RTCC_EXT_H_TO_L | RTCC_DIV_2); 
005F:  BSF    03.5
0060:  MOVF   01,W
0061:  ANDLW  C0
0062:  IORLW  30
0063:  MOVWF  01
....................     
....................    set_timer0(254); 
0064:  MOVLW  FE
0065:  BCF    03.5
0066:  MOVWF  01
....................     
....................    enable_interrupts(INT_timer0); 
0067:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
0068:  MOVLW  C0
0069:  IORWF  0B,F
....................     
....................    while(true); 
006A:  GOTO   06A
....................     
.................... } 
....................  
006B:  SLEEP
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
