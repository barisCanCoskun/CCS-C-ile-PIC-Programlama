CCS PCM C Compiler, Version 5.084d, 1               10-Jun-19 12:52
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   Y:\ccs c projects\App20_timer1_interrupt_counter\timer_1_int_counter.lst

               ROM used:   113 words (1%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           13 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   040
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
....................  
.................... #include <16f877.h> 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
....................  
.................... #fuses XT, NOWDT, NOPROTECT, NOBROWNOUT, NOLVP, NOPUT, NOWRT, NODEBUG, NOCPD 
....................  
.................... #use delay (clock = 4000000) 
....................  
.................... #use fast_io(b) 
.................... #use fast_io(c) 
....................  
.................... int kesme = 0; 
....................  
.................... #int_timer1 
.................... void timer1_interrupt() 
.................... { 
....................    set_timer1(65530); 
0031:  CLRF   0E
0032:  MOVLW  FF
0033:  MOVWF  0F
0034:  MOVLW  FA
0035:  MOVWF  0E
....................    kesme++; 
0036:  INCF   27,F
....................      
....................    output_b(kesme); 
0037:  MOVF   27,W
0038:  MOVWF  06
....................     
....................    if(kesme == 255) 
0039:  INCFSZ 27,W
003A:  GOTO   03C
....................       kesme = 0; 
003B:  CLRF   27
....................        
003C:  BCF    0C.0
003D:  BCF    0A.3
003E:  BCF    0A.4
003F:  GOTO   01D
.................... } 
....................  
.................... void main() 
0040:  MOVF   03,W
0041:  ANDLW  1F
0042:  MOVWF  03
0043:  CLRF   27
0044:  BSF    03.5
0045:  BSF    1F.0
0046:  BSF    1F.1
0047:  BSF    1F.2
0048:  BCF    1F.3
0049:  BCF    03.7
.................... { 
....................    setup_psp(PSP_DISABLED); 
004A:  BCF    09.4
....................    setup_timer_1(T1_DISABLED); //  silinebilir 
004B:  BCF    03.5
004C:  CLRF   10
....................    setup_timer_2(T2_DISABLED, 0, 1); 
004D:  MOVLW  00
004E:  MOVWF  78
004F:  MOVWF  12
0050:  MOVLW  00
0051:  BSF    03.5
0052:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
0053:  BSF    1F.0
0054:  BSF    1F.1
0055:  BSF    1F.2
0056:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
0057:  BCF    03.5
0058:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
0059:  MOVLW  F0
005A:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
005B:  ANDWF  1D,F
....................     
....................    set_tris_b(0x00); 
005C:  MOVLW  00
005D:  BSF    03.5
005E:  MOVWF  06
....................    set_tris_c(0x01); 
005F:  MOVLW  01
0060:  MOVWF  07
....................     
....................    output_b(0x00); 
0061:  BCF    03.5
0062:  CLRF   06
....................     
....................    setup_timer_1(T1_EXTERNAL | T1_DIV_BY_2); 
0063:  MOVLW  97
0064:  MOVWF  10
....................     
....................    set_timer1(65530); 
0065:  CLRF   0E
0066:  MOVLW  FF
0067:  MOVWF  0F
0068:  MOVLW  FA
0069:  MOVWF  0E
....................     
....................    enable_interrupts(int_timer1); 
006A:  BSF    03.5
006B:  BSF    0C.0
....................    enable_interrupts(GLOBAL); 
006C:  MOVLW  C0
006D:  BCF    03.5
006E:  IORWF  0B,F
....................     
....................    while(true); 
006F:  GOTO   06F
....................     
.................... } 
....................  
0070:  SLEEP
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
