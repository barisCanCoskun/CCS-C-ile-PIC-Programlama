CCS PCM C Compiler, Version 5.084d, 1               15-Jun-19 19:43
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   Y:\ccs c projects\App27_keypad_2_with_74C922\keypad_2_74C922.lst

               ROM used:   119 words (1%)
                           Largest free fragment is 2048
               RAM used:   12 (3%) at main() level
                           13 (4%) worst case
               Stack used: 2 locations (0 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   04F
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   043
....................  
.................... #include <16f877.h> 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
002F:  BCF    0A.0
0030:  BCF    0A.1
0031:  BCF    0A.2
0032:  ADDWF  02,F
0033:  RETLW  01
0034:  RETLW  02
0035:  RETLW  03
0036:  RETLW  00
0037:  RETLW  04
0038:  RETLW  05
0039:  RETLW  06
003A:  RETLW  00
003B:  RETLW  07
003C:  RETLW  08
003D:  RETLW  09
003E:  RETLW  00
003F:  RETLW  0F
0040:  RETLW  00
0041:  RETLW  0F
0042:  RETLW  00
....................  
.................... #list 
....................  
....................  
.................... #fuses XT, NOWDT, NOPROTECT, NOBROWNOUT, NOLVP, NOPUT, NOWRT, NODEBUG, NOCPD 
....................  
.................... #use delay (clock = 4000000) 
....................  
.................... #use fast_io(b) 
.................... #use fast_io(c) 
....................  
.................... #byte portc = 0x07 
....................  
.................... char const keys[] = {1, 2, 3, 0, 
....................                 4, 5, 6, 0, 
....................                 7, 8, 9, 0, 
....................                 0x0f, 0, 0x0f, 0}; 
....................  
.................... #int_ext 
.................... void dis_kesme() 
.................... { 
....................    portc = keys[portc>>4]; 
0043:  SWAPF  07,W
0044:  MOVWF  77
0045:  MOVLW  0F
0046:  ANDWF  77,F
0047:  MOVF   77,W
0048:  CALL   02F
0049:  MOVWF  78
004A:  MOVWF  07
004B:  BCF    0B.1
004C:  BCF    0A.3
004D:  BCF    0A.4
004E:  GOTO   01B
.................... } 
....................  
.................... void main() 
004F:  MOVF   03,W
0050:  ANDLW  1F
0051:  MOVWF  03
0052:  BSF    03.5
0053:  BSF    1F.0
0054:  BSF    1F.1
0055:  BSF    1F.2
0056:  BCF    1F.3
0057:  BCF    03.7
.................... { 
....................    setup_psp(PSP_DISABLED); 
0058:  BCF    09.4
....................    setup_timer_1(T1_DISABLED); 
0059:  BCF    03.5
005A:  CLRF   10
....................    setup_timer_2(T2_DISABLED, 0, 1); 
005B:  MOVLW  00
005C:  MOVWF  78
005D:  MOVWF  12
005E:  MOVLW  00
005F:  BSF    03.5
0060:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
0061:  BSF    1F.0
0062:  BSF    1F.1
0063:  BSF    1F.2
0064:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
0065:  BCF    03.5
0066:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
0067:  MOVLW  F0
0068:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF);  
0069:  ANDWF  1D,F
....................     
....................    set_tris_b(0x01); 
006A:  MOVLW  01
006B:  BSF    03.5
006C:  MOVWF  06
....................    set_tris_c(0xF0); 
006D:  MOVLW  F0
006E:  MOVWF  07
....................     
....................    ext_int_edge(L_TO_H); 
006F:  BSF    01.6
....................    //ext_int_edge(H_TO_L); 
....................     
....................    enable_interrupts(INT_EXT); 
0070:  BCF    03.5
0071:  BSF    0B.4
....................    enable_interrupts(GLOBAL);    
0072:  MOVLW  C0
0073:  IORWF  0B,F
....................     
....................    portc = 0; 
0074:  CLRF   07
....................     
....................    while(true); 
0075:  GOTO   075
.................... } 
....................  
0076:  SLEEP
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  
....................  

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
